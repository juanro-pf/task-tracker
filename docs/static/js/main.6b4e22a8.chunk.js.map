{"version":3,"sources":["taskSlice.js","TaskCreator.js","TasksList.js","index.js"],"names":["taskSlice","createSlice","name","initialState","reducers","addTask","state","action","push","payload","actions","TaskCreator","useState","task","setTask","time","setTime","timer","setTimer","dispatch","useDispatch","id","type","value","onChange","target","onFocus","clearInterval","onClick","setInterval","prevTime","parseInt","TasksList","useSelector","newArr","namesArr","i","console","log","includes","indexOf","slice","reverse","fixArray","length","map","el","className","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sKAIaA,EAAWC,YAAY,CAChCC,KAAM,OACNC,aAJgB,GAKhBC,SAAU,CACNC,QAAS,SAACC,EAAOC,GACbD,EAAME,KAAKD,EAAOE,aAKfJ,EAAWL,EAAUU,QAArBL,QAEAL,IAAf,Q,OC4DeW,MAxEf,WAEI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAUC,cA6BhB,OACE,gCACE,8CAEE,uBACEC,GAAG,WACHC,KAAK,OACLpB,KAAK,OACLqB,MAAOV,EACPW,SAxBgB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBX,EAAQW,EAAOF,aA0Bb,iDAEE,uBACEF,GAAG,YACHC,KAAK,SACLpB,KAAK,OACLqB,MAAOR,EACPS,SA9BgB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBT,EAAQS,EAAOF,QA8BTG,QA3BW,WACL,IAATT,IACDU,cAAcV,GACdC,EAAS,UA2BT,wBACEI,KAAK,SACLD,GAAG,QACHO,QArDa,WACN,IAARX,GAAWC,EAASW,aAAY,WAAOb,GAAQ,SAAAc,GAAQ,OAAIC,SAASD,GAAY,OAAM,OAiDvF,mBAKA,wBACER,KAAK,SACLD,GAAG,OACHO,QAtDY,WACJ,IAATX,GAAYU,cAAcV,GACnB,IAAPF,GAAUI,EAASd,EAAQ,CAACQ,EAAME,KACrCD,EAAQ,IACRE,EAAQ,GACRE,EAAS,IA8CP,sBCxBOc,MAxCf,WAEI,IAAM1B,EAAQ2B,aAAY,SAAA3B,GAAK,OAAIA,EAAMO,QAErCqB,EAAQ,GACRC,EAAU,GAiBd,OAhBgB,WACZ,IAAI,IAAIC,KAAK9B,EACT+B,QAAQC,IAAIJ,GACRC,EAASI,SAASjC,EAAM8B,GAAG,KAG3BC,QAAQC,IAAIH,GACZE,QAAQC,IAAIH,EAASK,QAAQlC,EAAM8B,GAAG,KACtCF,EAAOC,EAASK,QAAQlC,EAAM8B,GAAG,KAAK,GAAIF,EAAOC,EAASK,QAAQlC,EAAM8B,GAAG,KAAK,GAAKL,SAASzB,EAAM8B,GAAG,KAJvGF,EAAO1B,KAAK,CAACuB,SAASK,GAAK,EAAG9B,EAAM8B,GAAG,GAAI9B,EAAM8B,GAAG,KAMpDD,EAASI,SAASjC,EAAM8B,GAAG,KAAKD,EAAS3B,KAAKF,EAAM8B,GAAG,IAE/DF,EAAQA,EAAOO,MAAM,GAAGC,UAE5BC,GAGI,gCACI,mBAAGtB,GAAG,QAAN,SAAef,EAAMsC,SACrB,6BAEQV,EAAOW,KAAI,SAAAC,GAAE,OACT,qBAAIC,UAAU,OAAd,UACI,sBAAMA,UAAU,KAAhB,SAAyCD,EAAG,IAA5C,YAA+BA,EAAG,KAClC,sBAAMC,UAAU,OAAhB,SAA6CD,EAAG,IAAhD,cAAmCA,EAAG,KACtC,sBAAMC,UAAU,OAAhB,SAA6CD,EAAG,IAAhD,cAAmCA,EAAG,OAH1C,YAA+BA,EAAG,cCvBpDE,EAAOC,YAAe,CACxBC,QAAS,CACLrC,KAAMb,KAIdmD,IAASC,OACL,eAAC,IAAD,CAAUJ,MAAOA,EAAjB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJK,SAASC,eAAe,W","file":"static/js/main.6b4e22a8.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState= [];\r\n\r\nexport const taskSlice= createSlice({\r\n    name: 'task',\r\n    initialState,\r\n    reducers: {\r\n        addTask: (state, action) => {\r\n            state.push(action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addTask }= taskSlice.actions;\r\n\r\nexport default taskSlice.reducer;","import React, { useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask } from \"./taskSlice\";\r\n\r\nfunction TaskCreator() {\r\n\r\n    const [task, setTask] = useState('');\r\n    const [time, setTime] = useState(0);\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    const dispatch= useDispatch();\r\n\r\n    const handleStart= () => {\r\n      if(timer===0) setTimer(setInterval(() =>{ setTime(prevTime => parseInt(prevTime) + 1) }, 1000));\r\n    };\r\n\r\n    const handleStop= () => {\r\n      if(timer!== 0) clearInterval(timer);\r\n      if(time!==0) dispatch(addTask([task, time]))\r\n      setTask('');\r\n      setTime(0);\r\n      setTimer(0);\r\n    };\r\n\r\n    const handleTaskChange= ({target}) => {\r\n      setTask(target.value);\r\n    };\r\n\r\n    const handleTimeChange= ({target}) => {\r\n      setTime(target.value);\r\n    };\r\n\r\n    const handleFocus= () => {\r\n      if(timer!== 0) {\r\n        clearInterval(timer);\r\n        setTimer(0);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <label>\r\n          Task name\r\n          <input\r\n            id=\"taskName\"\r\n            type=\"text\"\r\n            name='task'\r\n            value={task}\r\n            onChange={handleTaskChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Time elapsed\r\n          <input\r\n            id=\"timeField\"\r\n            type=\"number\"\r\n            name='time'\r\n            value={time}\r\n            onChange={handleTimeChange}\r\n            onFocus={handleFocus}\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          id=\"start\"\r\n          onClick={handleStart}\r\n        >START</button>\r\n        <button\r\n          type=\"button\"\r\n          id=\"stop\"\r\n          onClick={handleStop}\r\n        >STOP</button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TaskCreator;\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction TasksList() {\r\n\r\n    const state = useSelector(state => state.task);\r\n\r\n    let newArr= [];\r\n    let namesArr= [];\r\n    const fixArray= () => {\r\n        for(let i in state){\r\n            console.log(newArr);\r\n            if(!namesArr.includes(state[i][0])){\r\n                newArr.push([parseInt(i) + 1, state[i][0], state[i][1]])\r\n            } else{\r\n                console.log(namesArr)\r\n                console.log(namesArr.indexOf(state[i][0]))\r\n                newArr[namesArr.indexOf(state[i][0])][2]= newArr[namesArr.indexOf(state[i][0])][2] + parseInt(state[i][1]);\r\n            }\r\n            if(!namesArr.includes(state[i][0])) namesArr.push(state[i][0]);\r\n        }\r\n        newArr= newArr.slice(0).reverse();\r\n    };\r\n    fixArray();\r\n\r\n    return (\r\n        <div>\r\n            <p id=\"total\">{state.length}</p>\r\n            <ul>\r\n                {\r\n                    newArr.map(el =>                 \r\n                        <li className=\"task\" key={`li${el[0]}`}>\r\n                            <span className=\"id\" key={`id${el[0]}`}>{el[0]}</span>\r\n                            <span className=\"name\" key={`name${el[0]}`}>{el[1]}</span>\r\n                            <span className=\"time\" key={`time${el[0]}`}>{el[2]}</span>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksList;","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\"\nimport TaskCreator from \"./TaskCreator\";\nimport TasksList from \"./TasksList\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport taskSlice from \"./taskSlice\";\n\nconst store= configureStore({\n    reducer: {\n        task: taskSlice\n    }\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <TaskCreator/>\n        <TasksList/>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}